schema {
  query: Query
  mutation: Mutation
}

type Query {
  getUserById(id: ID!): User
  getAllUsers: [User]
  getNoteById(id: ID!): Note
  getAllNotes: [Note]
  getNotesByUserId(userId: ID!): [Note]
}

type Mutation {
  createUser(input: CreateUserInput!): User
  updateUser(id: ID!, input: UpdateUserInput!): User
  deleteUser(id: ID!): DeleteResponse
  createNote(input: CreateNoteInput!): Note
  updateNote(id: ID!, input: UpdateNoteInput!): Note
  deleteNote(id: ID!): DeleteResponse
}

type User {
  id: ID!
  username: String!
  email: String!
  createdAt: String!
  updatedAt: String!
  notes: [Note]
}

type Note {
  id: ID!
  title: String!
  content: String!
  isArchived: Boolean!
  createdAt: String!
  updatedAt: String!
  userId: ID!
  user: User
}

input CreateUserInput {
  username: String!
  email: String!
}

input UpdateUserInput {
  username: String
  email: String
}

input CreateNoteInput {
  title: String!
  content: String!
  userId: ID!
}

input UpdateNoteInput {
  title: String
  content: String
  isArchived: Boolean
}

type DeleteResponse {
  id: ID!
}